version: 2.1
orbs:
  slack: circleci/slack@4.12.1
aliases:
  - &restore_gem_cache
      name: Restore gem cache
      keys:
        - &gem-cache gem-cache-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
        - gem-cache-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ .Branch }}
        - gem-cache-{{ .Environment.CACHE_VERSION }}
  - &save_gem_cache
      name: Save gem cache
      key: *gem-cache
      paths:
        - vendor/bundle
  - &gem_install
      name: Install Bundler and Gem
      command: scripts/circleci/ci-setup-ruby.sh
  - &config_mint
      name: Config Mint
      command: scripts/mint/mint-setup.sh
  - &restore_mint_cache
      name: Restore Mint cache
      keys:
        - &mint-cache mint-cache-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ .Branch }}-{{ checksum "Mintfile" }}
        - mint-cache-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ .Branch }}
        - mint-cache-{{ .Environment.CACHE_VERSION }}
  - &save_mint_cache
      name: Save Mint cache
      key: *mint-cache
      paths:
        - ./Mints
  - &mint_install_dependency
      name: Install dependency via Mint
      command: |
        export HOMEBREW_NO_AUTO_UPDATE=1
        scripts/mint/mint-run.sh
  - &generate_resource
      name: Generate Resource
      command: |
        scripts/swiftgen/swiftgen-run.sh
        scripts/xcodegen/xcodegen-run.sh
  - &restore_pod_cache
      name: Restore CocoaPods cache
      keys:
        - &pod-cache pod-cache-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
        - pod-cache-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ .Branch }}
        - pod-cache-{{ .Environment.CACHE_VERSION }}
  - &save_pod_cache
      name: Save CocoaPods cache
      key: *pod-cache
      paths:
        - ./Pods
  - &install_pod
      name: Install cocoapods
      command: |
        scripts/pod/pod-setup.sh
        scripts/pod/pod-run.sh
  - &init_project
      name: Init project
      command: scripts/common/init.sh
  - &init_mock
      name: Init Mock
      command: scripts/mockolo/mockolo-run.sh
  - &setup_xcode
      name: Setup Xcode
      command: |
        ls /Applications | grep Xcode
        sudo xcode-select -switch /Applications/Xcode_14.0.1.app && /usr/bin/xcodebuild -version    

jobs:
  build-and-test:
    macos:
      xcode: 14.0.1
    environment:
      SKIP_RUN: true
    steps:
      - checkout
      - run: *setup_xcode
      - restore_cache: *restore_gem_cache
      - run: *gem_install
      - save_cache: *save_gem_cache
      - run: *config_mint
      - restore_cache: *restore_mint_cache
      - run: *mint_install_dependency
      - save_cache: *save_mint_cache
      - run: *init_project
      - run: *generate_resource
      - restore_cache: *restore_pod_cache
      - run: *install_pod
      - save_cache: *save_pod_cache
      - run: *init_mock
      - run:
          name: Run Unit test
          command: scripts/project/run-unit-test.sh
      - run:
          name: Create slather file
          command: scripts/slather/slather-setup.sh
      - run:
          name: Generate code coverage
          command: scripts/slather/slather-run.sh
      - run:
          name: "Zip folder code coverage"
          command: |
                zip -r test-result.zip fastlane/reports/
      - store_test_results:
          path: fastlane/reports/unit_test
      - store_artifacts:
          path: test-result.zip
  deploy-apple:
    macos:
      xcode: 14.0.1
    environment:
      IS_PRODUCTION: true
      SKIP_RUN: true
    steps:
      - checkout
      - restore_cache: *restore_gem_cache
      - run: *gem_install
      - save_cache: *save_gem_cache
      - run: *config_mint
      - restore_cache: *restore_mint_cache
      - run: *mint_install_dependency
      - save_cache: *save_mint_cache
      - run: *init_project
      - run: *generate_resource
      - restore_cache: *restore_pod_cache
      - run: *install_pod
      - save_cache: *save_pod_cache
      - run:
          name: Create P8 API Key
          command: echo $APP_STORE_P8 | base64 --decode > AuthKey_6TF3P5J5QY.p8
      - run:
          name: Create ENV
          command: echo $ENV_CONTENT | base64 --decode > fastlane/.env.release
      - run:
          name: Deploy Testflight
          no_output_timeout: 15m
          command: scripts/project/run-upload-testflight.sh
      - store_artifacts:
          path: fastlane/build
workflows:
  build-and-test-workflow:
    jobs:
      - build-and-test
      - slack/on-hold:
          context: slack-secrets
          requires:
            - build-and-test
      - pause_workflow:
          requires:
            - build-and-test
            - slack/on-hold
          type: approval
      - deploy-apple:
          requires:
            - pause_workflow
